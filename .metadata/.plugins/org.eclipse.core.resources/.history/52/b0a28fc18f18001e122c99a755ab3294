package com.sagachoreographyos.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.stereotype.Service;

import com.sagachoreographyos.dao.OrderDao;
import com.sagachoreographyos.entity.Order;
import com.sagachoreographyos.event.OrderEvent;
import com.sagachoreographyos.event.OrderStatus;

@Service
public class OrderService {
	
	private final KafkaTemplate<String, OrderEvent> kafkaTemplate;
	
	@Autowired
	private OrderDao dao;
	
	
	public OrderService(KafkaTemplate<String, OrderEvent> kafkaTemplate) {
	    this.kafkaTemplate = kafkaTemplate;
	}

	public void sendMessage(OrderEvent orderEvent) {
	    kafkaTemplate.send("payment-topic", orderEvent);
	}

	public Order createOrder(Order orderReq) {
		orderReq.setOrderStatus(OrderStatus.ORDER_CREATED);
		Order oRes =dao.save(orderReq);
		OrderEvent orderEvent= new OrderEvent(orderReq, OrderStatus.ORDER_CREATED);
		kafkaTemplate.send(TOPIC_PAYMENT, orderEvent);
		return oRes;
	}
	
	
	
}
